JMP boot

vslDisplay EQU 0x300

sprite1: 
	DB "\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF"
	DB "\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF"
	DB "\xFF\xF0\xF0\xFF\xFF\xFF\xFF\xFF"
	DB "\xFF\xF0\xF0\xFF\xFF\xFF\xFF\xFF"
	DB "\xFF\xF0\xF0\xFF\xFF\xFF\xFF\xFF"
	DB "\xFF\xF0\xF0\xFF\xFF\xFF\xFF\xFF"
    DB "\xFF\xF0\xF0\xFF\xFF\xFF\xFF\xFF"
	DB "\xFF\xF0\xF0\xFF\xFF\xFF\xFF\xFF"
	DB "\xFF\xF0\xF0\xFF\xFF\xFF\xFF\xFF"
	DB "\xFF\xF0\xF0\xFF\xFF\xFF\xFF\xFF"
    DB "\xFF\xF0\xF0\xFF\xFF\xFF\xFF\xFF"
	DB "\xFF\xF0\xF0\xFF\xFF\xFF\xFF\xFF"
    DB "\xFF\xF0\xF0\xFF\xFF\xFF\xFF\xFF"
	DB "\xFF\xF0\xF0\xFF\xFF\xFF\xFF\xFF"
    DB "\xFF\xF0\xF0\xF0\xFF\xFF\xFF\xFF"
	DB "\xFF\xFF\xF0\xF0\xFF\xFF\xFF\xFF"
    

sprite2: 
	DB "\xFF\xFF\xF0\xF0\xFF\xFF\xFF\xFF"
	DB "\xFF\xFF\xF0\xF0\xFF\xFF\xFF\xFF"
	DB "\xFF\xFF\xF0\xF0\xFF\xFF\xFF\xFF"
	DB "\xFF\xFF\xF0\xF0\xFF\xFF\xFF\xFF"
	DB "\xFF\xFF\xF0\xF0\xFF\xFF\xFF\xFF"
	DB "\xFF\xFF\xF0\xF0\xFF\xFF\xFF\xFF"
    DB "\xFF\xFF\xF0\xF0\xFF\xFF\xFF\xFF"
	DB "\xFF\xFF\xF0\xF0\xFF\xFF\xFF\xFF"
	DB "\xFF\xFF\xF0\xF0\xFF\xFF\xFF\xFF"
	DB "\xFF\xFF\xF0\xF0\xFF\xFF\xFF\xFF"
    DB "\xFF\xFF\xF0\xF0\xFF\xFF\xFF\xFF"
	DB "\xFF\xFF\xF0\xF0\xFF\xFF\xFF\xFF"
    DB "\xFF\xFF\xF0\xF0\xFF\xFF\xFF\xFF"
	DB "\xFF\xFF\xF0\xF0\xFF\xFF\xFF\xFF"
    DB "\xFF\xFF\xF0\xF0\xF0\xFF\xFF\xFF"
	DB "\xFF\xFF\xFF\xF0\xF0\xFF\xFF\xFF"
    
sprite3: 
    DB "\xFF\xFF\xFF\xF0\xF0\xFF\xFF\xFF"
	DB "\xFF\xFF\xFF\xF0\xF0\xFF\xFF\xFF"
	DB "\xFF\xFF\xFF\xF0\xF0\xFF\xFF\xFF"
	DB "\xFF\xFF\xFF\xF0\xF0\xFF\xFF\xFF"
	DB "\xFF\xFF\xFF\xF0\xF0\xFF\xFF\xFF"
	DB "\xFF\xFF\xFF\xF0\xF0\xFF\xFF\xFF"
    DB "\xFF\xFF\xFF\xF0\xF0\xFF\xFF\xFF"
	DB "\xFF\xFF\xFF\xF0\xF0\xFF\xFF\xFF"
	DB "\xFF\xFF\xFF\xF0\xF0\xFF\xFF\xFF"
	DB "\xFF\xFF\xFF\xF0\xF0\xFF\xFF\xFF"
    DB "\xFF\xFF\xFF\xF0\xF0\xFF\xFF\xFF"
	DB "\xFF\xFF\xFF\xF0\xF0\xFF\xFF\xFF"
    DB "\xFF\xFF\xFF\xF0\xF0\xFF\xFF\xFF"
	DB "\xFF\xFF\xFF\xF0\xF0\xFF\xFF\xFF"
    DB "\xFF\xFF\xFF\xF0\xF0\xF0\xFF\xFF"
	DB "\xFF\xFF\xFF\xFF\xF0\xF0\xFF\xFF"

sprite4: 
    DB "\xFF\xFF\xFF\xFF\xF0\xF0\xFF\xFF"
	DB "\xFF\xFF\xFF\xFF\xF0\xF0\xFF\xFF"
	DB "\xFF\xFF\xFF\xFF\xF0\xF0\xFF\xFF"
	DB "\xFF\xFF\xFF\xFF\xF0\xF0\xFF\xFF"
	DB "\xFF\xFF\xFF\xFF\xF0\xF0\xFF\xFF"
	DB "\xFF\xFF\xFF\xFF\xF0\xF0\xFF\xFF"
    DB "\xFF\xFF\xFF\xFF\xF0\xF0\xFF\xFF"
	DB "\xFF\xFF\xFF\xFF\xF0\xF0\xFF\xFF"
	DB "\xFF\xFF\xFF\xFF\xF0\xF0\xFF\xFF"
	DB "\xFF\xFF\xFF\xFF\xF0\xF0\xFF\xFF"
    DB "\xFF\xFF\xFF\xFF\xF0\xF0\xFF\xFF"
	DB "\xFF\xFF\xFF\xFF\xF0\xF0\xFF\xFF"
    DB "\xFF\xFF\xFF\xFF\xF0\xF0\xFF\xFF"
	DB "\xFF\xFF\xFF\xFF\xF0\xF0\xFF\xFF"
    DB "\xFF\xFF\xFF\xFF\xF0\xF0\xFF\xFF"
	DB "\xFF\xFF\xFF\xFF\xF0\xF0\xFF\xFF"
    
boot:
	MOV B, 1		; Contador para repetir el bucle 4 veces

.main_loop:
	MOV C, sprite1		; C points to the first sprite
	MOV D, vslDisplay	; D points to the fb

.loop1:
	MOVB AL, [C]	; Print all the pixels of the first sprite
	MOVB [D], AL
	INC C
	INC D
	CMP D, 0x400		; Stop after filling the first sprite
	JNZ .loop1

	MOV C, sprite2		; C points to the second sprite
	MOV D, vslDisplay	; Reset D to the start of the display

.loop2:
	MOVB AL, [C]	; Print all the pixels of the second sprite
	MOVB [D], AL
	INC C
	INC D
	CMP D, 0x400		; Stop after filling the second sprite
	JNZ .loop2

	MOV C, sprite3		; C points to the third sprite
	MOV D, vslDisplay	; Reset D to the start of the display

.loop3:
	MOVB AL, [C]	; Print all the pixels of the third sprite
	MOVB [D], AL
	INC C
	INC D
	CMP D, 0x400		; Stop after filling the third sprite
	JNZ .loop3

	MOV C, sprite4		; C points to the fourth sprite
	MOV D, vslDisplay	; Reset D to the start of the display

.loop4:
	MOVB AL, [C]	; Print all the pixels of the fourth sprite
	MOVB [D], AL
	INC C
	INC D
	CMP D, 0x400		; Stop after filling the fourth sprite
	JNZ .loop4

	DEC B			; Decrementar el contador
	JNZ .main_loop	; Repetir el bucle principal si B no es cero

	HLT
